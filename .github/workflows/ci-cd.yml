name: CI/CD Pipeline with Password Auth
on:
  push:
    branches:
      - main
jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, mysqli
          ini-values: post_max_size=256M, upload_max_filesize=256M
      
      - name: Install Composer dependencies
        run: |
          if [ -f composer.json ]; then
            composer install --no-progress --prefer-dist
          else
            echo '{
              "name": "your-vendor/contact-manager",
              "description": "Contact Manager Project using LAMP stack",
              "require": {
                "php": ">=8.1"
              }
            }' > composer.json
            composer install --no-progress --prefer-dist
          fi
      
      - name: Run tests
        run: |
          if [ -f phpunit.xml ]; then
            vendor/bin/phpunit --configuration phpunit.xml
          else
            echo "No PHPUnit config found, skipping tests."
          fi
  
  deploy:
    name: Deploy to Server (Password Auth)
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Install sshpass for password-based authentication
      - name: Install sshpass
        run: sudo apt-get install sshpass
      
      # Create a deployment package
      - name: Create deployment package
        run: |
          zip -r deployment.zip . -x ".git/*" ".github/*"
      
      # Deploy using password authentication
      - name: Deploy to server (using password)
        env:
          SSHPASS: ${{ secrets.SSH_PASSWORD }}
        run: |
          # Upload the deployment package
          sshpass -e scp -o StrictHostKeyChecking=no deployment.zip ${{ secrets.SSH_USER }}@${{ secrets.DROPLET_IP }}:/tmp/
          
          # Extract and install on the server
          sshpass -e ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.DROPLET_IP }} '
            # Extract the deployment
            unzip -o /tmp/deployment.zip -d /var/www/html/
            
            # Clean up
            rm /tmp/deployment.zip
            
            # Install dependencies
            cd /var/www/html
            if [ -f composer.json ]; then
              composer install --no-dev --optimize-autoloader
            fi
            
            # Run migrations if Laravel/framework project
            if [ -f artisan ]; then
              php artisan migrate --force
              php artisan cache:clear
            fi
            
            # Fix permissions
            sudo chown -R www-data:www-data /var/www/html
            
            # Restart web server
            sudo systemctl restart apache2
          '
